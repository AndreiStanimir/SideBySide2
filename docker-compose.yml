services:
  # API Service
  api:
    build:
      context: ./Backend/SideBySideAPI
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    volumes:
      - ./Backend/SideBySideAPI:/app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - MongoDB__DatabaseName=SideBySide
      - Redis__ConnectionString=redis:6379
      - OcrService__Url=http://tesseract:8000/ocr
    depends_on:
      mongodb:
        condition: service_started
      redis:
        condition: service_started
      tesseract:
        condition: service_started
    networks:
      - side-by-side-network
    restart: on-failure

  # MongoDB Service
  mongodb:
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - side-by-side-network
    restart: unless-stopped

  # Redis for Caching
  redis:
    image: redis:alpine
    command: redis-server --bind 0.0.0.0
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - side-by-side-network
    restart: unless-stopped

  # OCR Service (OCRmyPDF)
  tesseract:
    build:
      context: ./Tesseract
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./Tesseract:/app
      - ocrmypdf_input:/app/input
      - ocrmypdf_output:/app/output
    environment:
      - PYTHONUNBUFFERED=1
      - VIRTUAL_ENV=/opt/venv
      - PATH=/opt/venv/bin:$PATH
    networks:
      - side-by-side-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8000/docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  mongodb_data:
  redis_data:
  ocrmypdf_input:
  ocrmypdf_output:

networks:
  side-by-side-network:
    driver: bridge
